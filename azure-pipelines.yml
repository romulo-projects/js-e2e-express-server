trigger:
- none

pool:
  name: 'Default'  
  demands:
  - agent.name -equals myagent

variables:
  nodeVersion: '16.x'
  npmCacheKey: 'npm | "$(Agent.OS)" | package-lock.json'
  sourceDir: '$(Build.SourcesDirectory)'
  artifactDir: '$(Build.ArtifactStagingDirectory)'

steps:
- task: UseNode@1
  inputs:
    version: '$(nodeVersion)'
  displayName: 'Instalacao Node.js $(nodeVersion)'

- task: CacheBeta@1
  inputs:
    key: '$(npmCacheKey)'
    path: '$(sourceDir)/node_modules'
  displayName: 'Cache das dependencias do NPM'

- task: Npm@1
  inputs:
    command: 'ci'
  displayName: 'Instalando dependencias'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run lint'
  displayName: 'Executando teste de qualidade'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run test'
  displayName: 'Executando teste de integridade'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run build'
  displayName: 'Build do Projeto'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(sourceDir)'
    contents: |
       src/*
       public/*
    targetFolder: '$(artifactDir)'
  displayName: 'Copiando Arquivos para o Diretorio de Artefatos'

- task: PublishPipelineArtifact@1
  inputs:
    artifactName: e2e-server
    targetPath: '$(artifactDir)'
    publishLocation: 'pipeline'
  displayName: 'Publicando Artefato'